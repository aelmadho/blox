plugins {
    id 'net.ltgt.apt' version '0.11'
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id "java"
}

description "Implementation of the Blox DataService"

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.180'
    }
    dependencies {
        dependencySet(group: 'org.slf4j', version: '1.7.+') {
            entry 'slf4j-api'
            entry 'jcl-over-slf4j'
        }
        dependencySet(group: 'org.springframework', version: '4.3.10.RELEASE') {
            entry 'spring-core'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-test'
        }
        dependencySet(group: 'org.mapstruct', version: '1.2.0.CR1') {
            entry 'mapstruct-jdk8'
            entry 'mapstruct-processor'
        }
    }
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

dependencies {
    compile project(":data-service-model")

    compile(
            'com.amazonaws:aws-java-sdk-dynamodb',
            'com.amazonaws:aws-lambda-java-log4j2:1.0.+',

            'org.apache.logging.log4j:log4j-slf4j-impl:2.8.+',
            'org.apache.commons:commons-lang3:3.6',

            'org.projectlombok:lombok:1.16.18',
            'org.mapstruct:mapstruct-jdk8',

            'org.springframework:spring-core',
            'org.springframework:spring-beans',
            'org.springframework:spring-context',

            'org.slf4j:slf4j-api'
    )

    testCompile(
            'junit:junit:4.12',
            'org.mockito:mockito-core:1.+',
            'org.springframework:spring-test',
            'org.slf4j:slf4j-api',
            'org.slf4j:jcl-over-slf4j'
    )

    apt 'org.mapstruct:mapstruct-processor'
    apt 'org.projectlombok:lombok:1.16.18'
}

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
    }
}

dependencies {
    integTestCompile sourceSets.main.output
    integTestCompile sourceSets.test.output

    integTestCompile configurations.compile
    integTestCompile configurations.testCompile

    integTestRuntime configurations.runtime
    integTestRuntime configurations.testRuntime
}

task integTests(type: Test, dependsOn: build) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the integration tests.'

    maxHeapSize = '1024m'

    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
}

test {
    exclude '**/*IntegTest'
}